#!/bin/bash
# Copyright 2017 The Bootkube-CI Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
### Declare colors to use during the running of this script:
declare -r GREEN="\033[0;32m"
declare -r RED="\033[0;31m"
declare -r YELLOW="\033[0;33m"

function echo_green {
  echo -e "${GREEN}$1"; tput sgr0
}
function echo_red {
  echo -e "${RED}$1"; tput sgr0
}
function echo_yellow {
  echo -e "${YELLOW}$1"; tput sgr0
}

# BRING UP INFRASTRUCTURE ITEMS:
source /opt/demo/.bootkube_env
echo -e -n "Bringing up MariaDB..."
helm install --name=mariadb ${HELM_REPO}/mariadb --namespace=openstack \
  --set pod.replicas.server=${MARIADB_REPLICAS}

### RUN VARIOUS CEPH CHECKS BEFORE CONTINUING:
echo -e -n "Waiting for requested MariaDB containers to be in a running state..."
while true; do
  running_count=$(sudo kubectl --kubeconfig=/etc/kubernetes/kubeconfig get pods -n openstack --no-headers 2>/dev/null | grep "1/1" | grep "mariadb" | wc -l)
  ### Expect all components to be out of a "ContainerCreating" state before collecting log data (this includes CrashLoopBackOff states):
  if [ "$running_count" -ge ${MARIADB_REPLICAS} ]; then
    break
  fi
  echo -n "."
  sleep 1
done
echo_green "SUCCESS"
echo_green "MARIADB READY!"
echo ""

### BRING UP THE INFRASTRUCTURE COMPONENTS:
#helm install --name=memcached $HELM_REPO/memcached --namespace=openstack
#helm install --name=etcd-rabbitmq $HELM_REPO/etcd --namespace=openstack
#helm install --name=rabbitmq $HELM_REPO/rabbitmq --namespace=openstack
#helm install --name=ingress $HELM_REPO/ingress --namespace=openstack
#helm install --name=libvirt $HELM_REPO/libvirt --namespace=openstack
#helm install --name=openvswitch $HELM_REPO/openvswitch --namespace=openstack
