#!/bin/bash
# Copyright 2017 The Bootkube-CI Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
### Declare colors to use during the running of this script:
declare -r GREEN="\033[0;32m"
declare -r RED="\033[0;31m"
declare -r YELLOW="\033[0;33m"

function echo_green {
  echo -e "${GREEN}$1"; tput sgr0
}
function echo_red {
  echo -e "${RED}$1"; tput sgr0
}
function echo_yellow {
  echo -e "${YELLOW}$1"; tput sgr0
}

source /opt/demo/.bootkube_env

echo_yellow "\nDeploying Heapster add-on for Kubernetes:"
kubectl apply -f https://raw.githubusercontent.com/charter-ctec/charter-nfv-demo/master/scripts/kubernetes/manifests/heapster.yaml

echo -e -n "Waiting for Heapster deployment to complete..."
while true; do
  running_count=$(kubectl get pods -n kube-system --no-headers 2>/dev/null | grep "1/1" | grep "heapster" | wc -l)
  ### Expect all components to be out of a "ContainerCreating" state before collecting log data (this includes CrashLoopBackOff states):
  if [ "$running_count" -ge 1 ]; then
    break
  fi
  echo -n "."
  sleep 1
done
echo_green "HEAPSTER ADD-ON READY!"
echo ""

echo_yellow "\nDeploying InfluxDB add-on for Kubernetes:"
kubectl apply -f https://raw.githubusercontent.com/charter-ctec/charter-nfv-demo/master/scripts/kubernetes/manifests/influxdb.yaml

echo -e -n "Waiting for InfluxDB deployment to complete..."
while true; do
  running_count=$(kubectl get pods -n kube-system --no-headers 2>/dev/null | grep "1/1" | grep "influxdb" | wc -l)
  ### Expect all components to be out of a "ContainerCreating" state before collecting log data (this includes CrashLoopBackOff states):
  if [ "$running_count" -ge 1 ]; then
    break
  fi
  echo -n "."
  sleep 1
done
echo_green "INFLUX ADD-ON READY!"
echo ""

echo_green "\nList of deployed Kubernetes add-ons:"
kubectl cluster-info
